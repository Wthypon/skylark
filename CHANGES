version 0.9.1
-------------

- Fix #32 in #33.

version 0.9.0 (**not backward compatiable**)
--------------------------------------------

Add:

- Support for field/function/sql on the right side of an expression
- Support for custom operator (like bitwise operators)
- Support for sqlite3.
- Ability to set DBAPI.
- Transaction
- join methods: `User.join(Post)`, ..
- method `Database.set_autocommit`

Non-compatiable Changes:

- select-result.one()/all() return only instances of models
- fetch function/expression result from selectresult by method tuples()
- remove method dicts() from select-result

version 0.7.1
--------------

- Close cursor on each execution

- Close connection on Database deled

version 0.7.0
-------------

- Rename `curd.py` to `skylark`

version 0.6.0
-------------

- Prefer to use the C DBAPI(MySQLdb), then PyMySQL

- Support for Python3.x (>=3.3)

version 0.5.0 (**not backward compatiable**)
--------------------------------------------

- Fix bug: issue#12, select statement with where syntax without priority

- SelectResult: `findall()` => `all()`, `findone()` => `one()`

- SelectResults: add `tuples()`, `dicts()`

- Removed `distinct()`, add keyword `distinct` (implemented as a type)

- Retrieving data way: inst; inst, func; func

- Add class `sql`, to declare a literal sql

- Lots of minor bugs fixed.

version 0.4.1
-------------

- fix bug: issue#9, active connection wasn't closed when database configs was updated
- table_name: add ability to define custom table_name; default table_name: User=>'user', CuteCat=>'cute_cat'

version 0.4.0
-------------

No changes in API.

- fix, improve docstrings, document, readme..

version 0.3.6
-------------

Added:

- support for ``group by``
- support for ``having``
- support for keyword ``distinct``

version 0.3.5
-------------

No changes in API.

- use tuple format of MySQLdb return result instead of dict
- some typofixed

version 0.3.4
-------------

**not backward compatiable changes:**

Reomved:

- Removed method ``select_without_primarykey``

Changes:

- method ``select`` now won't select primarykeys automatically
- subquery parsing result now was wrapped with ``()``

version 0.3.3
--------------

Types supporting:

- string, unicode
- numbers: float, int, long
- datetime: datetime, date, time, timedelta
- bool
- Nonetype
- sequence: list, tuple
- dict

version 0.3.2
-------------

Added:

- support for datetime

sample::

    >>> Post.at(1).update(update_at=datetime.now())
    <UpdateQuery "update post set post.update_at = '2013-11-21 16:45:57' where post.post_id = 1">

version 0.3.1
-------------

Added:

- Ability to use SQL functions

Supported SQL functions: `count`, `sum`, `max`, `min`, `lcase`, `ucase`


version 0.3.0 (**not backward compatiable**)
--------------------------------------------

- A lot of features are changed.


version 0.2.5 (**not backward compatiable**)
--------------------------------------------

Removed:

- `Database.debug`
- `Database.SQL`
- `Database.query_times`

Changes:

- `Database.execute()` now return `rows_affected`, not `rows_matched`
- `model.save()` now return `0` for 'data not changed'
- `select_result.count` return long int now, no `cast to int`

Added:

- Exceptions: `UnSupportedType`, `ForeignKeyNotFound`

version 0.2.2
-------------

- fix: unicode supporting in process parsing expr string
- fix: remove "avoid primary in set"
